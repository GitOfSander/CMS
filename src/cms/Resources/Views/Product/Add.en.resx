<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Active" xml:space="preserve">
    <value>Active</value>
  </data>
  <data name="AddItem" xml:space="preserve">
    <value>Add</value>
  </data>
  <data name="AddTitle" xml:space="preserve">
    <value>Add product</value>
  </data>
  <data name="Allow" xml:space="preserve">
    <value>Allow</value>
  </data>
  <data name="AllowBackorders" xml:space="preserve">
    <value>Allow backorders?</value>
  </data>
  <data name="AllowButNotify" xml:space="preserve">
    <value>Allow, but notify customer</value>
  </data>
  <data name="Categories" xml:space="preserve">
    <value>Categories</value>
  </data>
  <data name="Close" xml:space="preserve">
    <value>Close</value>
  </data>
  <data name="Crop" xml:space="preserve">
    <value>Crop</value>
  </data>
  <data name="CropImage" xml:space="preserve">
    <value>Crop image</value>
  </data>
  <data name="Delete" xml:space="preserve">
    <value>Delete</value>
  </data>
  <data name="DeleteProduct" xml:space="preserve">
    <value>Delete</value>
  </data>
  <data name="Dimensions" xml:space="preserve">
    <value>Dimensions ({0})</value>
  </data>
  <data name="DoNotAllow" xml:space="preserve">
    <value>Do not allow</value>
  </data>
  <data name="EditSpanTitle" xml:space="preserve">
    <value>Edit product: &lt;span&gt;&lt;/span&gt;</value>
  </data>
  <data name="EditTitle" xml:space="preserve">
    <value>Edit product</value>
  </data>
  <data name="EnableManageStock" xml:space="preserve">
    <value>Enable manage stock</value>
  </data>
  <data name="EnableReviews" xml:space="preserve">
    <value>Enable reviews</value>
  </data>
  <data name="Files" xml:space="preserve">
    <value>Files</value>
  </data>
  <data name="From" xml:space="preserve">
    <value>From</value>
  </data>
  <data name="General" xml:space="preserve">
    <value>General</value>
  </data>
  <data name="Height" xml:space="preserve">
    <value>Height</value>
  </data>
  <data name="Information" xml:space="preserve">
    <value>Information</value>
  </data>
  <data name="InStock" xml:space="preserve">
    <value>In stock</value>
  </data>
  <data name="Inventory" xml:space="preserve">
    <value>Inventory</value>
  </data>
  <data name="Length" xml:space="preserve">
    <value>Length</value>
  </data>
  <data name="LinkedProducts" xml:space="preserve">
    <value>Linked products</value>
  </data>
  <data name="MaxPerOrder" xml:space="preserve">
    <value>Max. per order</value>
  </data>
  <data name="Name" xml:space="preserve">
    <value>Name</value>
  </data>
  <data name="NoFlashSupport" xml:space="preserve">
    <value>Your browser doesn't have Flash, Silverlight or HTML5 support.</value>
  </data>
  <data name="OnBackorder" xml:space="preserve">
    <value>On backorder</value>
  </data>
  <data name="Options" xml:space="preserve">
    <value>Options</value>
  </data>
  <data name="OutOfStock" xml:space="preserve">
    <value>Out of stock</value>
  </data>
  <data name="PageDescription" xml:space="preserve">
    <value>Page description</value>
  </data>
  <data name="PageKeywords" xml:space="preserve">
    <value>Page keywords</value>
  </data>
  <data name="PageSlug" xml:space="preserve">
    <value>Page slug</value>
  </data>
  <data name="PageSlugExample" xml:space="preserve">
    <value>(example: this-is-a-slug)</value>
  </data>
  <data name="PageTitle" xml:space="preserve">
    <value>Page title</value>
  </data>
  <data name="Price" xml:space="preserve">
    <value>Price ({0})</value>
  </data>
  <data name="PromotionalPrice" xml:space="preserve">
    <value>Promotional price ({0})</value>
  </data>
  <data name="Publish" xml:space="preserve">
    <value>Publish</value>
  </data>
  <data name="Quality" xml:space="preserve">
    <value>Quality</value>
  </data>
  <data name="Resources" xml:space="preserve">
    <value>Resources</value>
  </data>
  <data name="Save" xml:space="preserve">
    <value>Save</value>
  </data>
  <data name="SaveOrder" xml:space="preserve">
    <value>Save order</value>
  </data>
  <data name="SchedulePromoticalPrice" xml:space="preserve">
    <value>Schedule promotical price</value>
  </data>
  <data name="SelectCategories" xml:space="preserve">
    <value>To select categories, enter the first letters of the category in the input field to find and select it.&lt;br /&gt;It is possible to link the product to multiple categories</value>
  </data>
  <data name="Settings" xml:space="preserve">
    <value>Settings</value>
  </data>
  <data name="Shipping" xml:space="preserve">
    <value>Shipping</value>
  </data>
  <data name="ShippingClass" xml:space="preserve">
    <value>Shipping class</value>
  </data>
  <data name="Sku" xml:space="preserve">
    <value>SKU</value>
  </data>
  <data name="StockQuantity" xml:space="preserve">
    <value>Stock quantity</value>
  </data>
  <data name="StockStatus" xml:space="preserve">
    <value>Stock status?</value>
  </data>
  <data name="SureCreate" xml:space="preserve">
    <value>Are you sure you want to create this product?</value>
  </data>
  <data name="SureDelete" xml:space="preserve">
    <value>Are you sure you want to delete this product? It can be linked to sales or open orders.</value>
  </data>
  <data name="SureDeleteFile" xml:space="preserve">
    <value>Are you sure you want to delete this file?</value>
  </data>
  <data name="SureStatus" xml:space="preserve">
    <value>Are you sure you want to change the status of this product?</value>
  </data>
  <data name="SureStatusFile" xml:space="preserve">
    <value>Are you sure you want to change the status of this file?</value>
  </data>
  <data name="SureUpdate" xml:space="preserve">
    <value>Do you want to update your changes?</value>
  </data>
  <data name="SureUpdateResources" xml:space="preserve">
    <value>Are you sure you want to update the resources?</value>
  </data>
  <data name="TaxClass" xml:space="preserve">
    <value>Tax class</value>
  </data>
  <data name="Till" xml:space="preserve">
    <value>Till</value>
  </data>
  <data name="Warning" xml:space="preserve">
    <value>Warning!</value>
  </data>
  <data name="Weight" xml:space="preserve">
    <value>Weight ({0})</value>
  </data>
  <data name="Width" xml:space="preserve">
    <value>Width</value>
  </data>
  <data name="Clean" xml:space="preserve">
    <value>Remove formatting</value>
  </data>
  <data name="DigitsValidation" xml:space="preserve">
    <value>Please enter only digits and max</value>
  </data>
  <data name="DigitsValidationEnd" xml:space="preserve">
    <value>digits after decimal and 14 before.</value>
  </data>
  <data name="ErrorsTab" xml:space="preserve">
    <value>There are some errors in this tab at the input fields. Click on the tab to see more.</value>
  </data>
  <data name="NameValidation" xml:space="preserve">
    <value>Name is required.</value>
  </data>
  <data name="NoResultsFound" xml:space="preserve">
    <value>No results found...</value>
  </data>
  <data name="PriceValidation" xml:space="preserve">
    <value>Price is required.</value>
  </data>
  <data name="Select" xml:space="preserve">
    <value>Select</value>
  </data>
  <data name="SelectCategory" xml:space="preserve">
    <value>Select a category</value>
  </data>
  <data name="TitleValidation" xml:space="preserve">
    <value>Title is required.</value>
  </data>
  <data name="Unauthorized" xml:space="preserve">
    <value>You are unauthorized to do this. You will be redirected to the login screen.</value>
  </data>
  <data name="UrlValidation" xml:space="preserve">
    <value>Enter an url.</value>
  </data>
  <data name="DigitsVal" xml:space="preserve">
    <value>Please enter only digits.</value>
  </data>
  <data name="MaxLength200" xml:space="preserve">
    <value>Please enter no more than 200 characters.</value>
  </data>
  <data name="MaxLength255" xml:space="preserve">
    <value>Please enter no more than 255 characters.</value>
  </data>
</root>