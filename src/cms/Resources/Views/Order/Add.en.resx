<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Add" xml:space="preserve">
    <value>Add</value>
  </data>
  <data name="AddProduct" xml:space="preserve">
    <value>Add product</value>
  </data>
  <data name="Address" xml:space="preserve">
    <value>Address</value>
  </data>
  <data name="AddressLine2" xml:space="preserve">
    <value>Address line 2</value>
  </data>
  <data name="AddressPlaceholder" xml:space="preserve">
    <value>Street and house number</value>
  </data>
  <data name="AddShippingModalTitle" xml:space="preserve">
    <value>Add shipping</value>
  </data>
  <data name="AddTitle" xml:space="preserve">
    <value>Add order</value>
  </data>
  <data name="BillingInfo" xml:space="preserve">
    <value>Billing details</value>
  </data>
  <data name="BillingModalTitle" xml:space="preserve">
    <value>Update billing details</value>
  </data>
  <data name="Cancelled" xml:space="preserve">
    <value>Cancelled</value>
  </data>
  <data name="City" xml:space="preserve">
    <value>City</value>
  </data>
  <data name="Close" xml:space="preserve">
    <value>Close</value>
  </data>
  <data name="CompanyName" xml:space="preserve">
    <value>Company name</value>
  </data>
  <data name="Completed" xml:space="preserve">
    <value>Completed</value>
  </data>
  <data name="CopyBillingInformation" xml:space="preserve">
    <value>Copy billing details</value>
  </data>
  <data name="CreatedAt" xml:space="preserve">
    <value>Created at</value>
  </data>
  <data name="Delete" xml:space="preserve">
    <value>Delete</value>
  </data>
  <data name="DeleteModalTitle" xml:space="preserve">
    <value>Warning!</value>
  </data>
  <data name="DeleteSelection" xml:space="preserve">
    <value>Delete selection</value>
  </data>
  <data name="Discount" xml:space="preserve">
    <value>Discount</value>
  </data>
  <data name="DisplayName" xml:space="preserve">
    <value>Display name</value>
  </data>
  <data name="DownloadInvoice" xml:space="preserve">
    <value>Download invoice</value>
  </data>
  <data name="EditTitle" xml:space="preserve">
    <value>Edit order</value>
  </data>
  <data name="EmailAddress" xml:space="preserve">
    <value>E-mail address</value>
  </data>
  <data name="Failed" xml:space="preserve">
    <value>Failed</value>
  </data>
  <data name="FeeModalTitle" xml:space="preserve">
    <value>Add fee</value>
  </data>
  <data name="Fees" xml:space="preserve">
    <value>Fees</value>
  </data>
  <data name="FirstName" xml:space="preserve">
    <value>First name</value>
  </data>
  <data name="General" xml:space="preserve">
    <value>Information</value>
  </data>
  <data name="GeneralModalTitle" xml:space="preserve">
    <value>Update general details</value>
  </data>
  <data name="Item" xml:space="preserve">
    <value>Item</value>
  </data>
  <data name="LastName" xml:space="preserve">
    <value>Last name</value>
  </data>
  <data name="Name" xml:space="preserve">
    <value>Name</value>
  </data>
  <data name="Netherlands" xml:space="preserve">
    <value>Netherlands</value>
  </data>
  <data name="NoProducts" xml:space="preserve">
    <value>There are no products yet. Add one by clicking the button left below.</value>
  </data>
  <data name="Note" xml:space="preserve">
    <value>Note</value>
  </data>
  <data name="OnHold" xml:space="preserve">
    <value>On hold</value>
  </data>
  <data name="OrderDetails" xml:space="preserve">
    <value>Order details</value>
  </data>
  <data name="Payment" xml:space="preserve">
    <value>Prices</value>
  </data>
  <data name="PendingPayment" xml:space="preserve">
    <value>Pending payment</value>
  </data>
  <data name="PhoneNumber" xml:space="preserve">
    <value>Phone number</value>
  </data>
  <data name="Price" xml:space="preserve">
    <value>Price</value>
  </data>
  <data name="Processing" xml:space="preserve">
    <value>Processing</value>
  </data>
  <data name="Product" xml:space="preserve">
    <value>Product</value>
  </data>
  <data name="Products" xml:space="preserve">
    <value>Products</value>
  </data>
  <data name="Province" xml:space="preserve">
    <value>Province / state</value>
  </data>
  <data name="Quantity" xml:space="preserve">
    <value>Quantity</value>
  </data>
  <data name="Save" xml:space="preserve">
    <value>Save</value>
  </data>
  <data name="SelectCountry" xml:space="preserve">
    <value>Select country</value>
  </data>
  <data name="Shipping" xml:space="preserve">
    <value>Shipping</value>
  </data>
  <data name="ShippingInfo" xml:space="preserve">
    <value>Shipping details</value>
  </data>
  <data name="ShippingModalTitle" xml:space="preserve">
    <value>Update shipping details</value>
  </data>
  <data name="Status" xml:space="preserve">
    <value>Status</value>
  </data>
  <data name="SureDeleteSelection" xml:space="preserve">
    <value>Are you sure you want to delete your selection?</value>
  </data>
  <data name="Tax" xml:space="preserve">
    <value>Tax</value>
  </data>
  <data name="Taxable" xml:space="preserve">
    <value>Taxable</value>
  </data>
  <data name="TaxDepends" xml:space="preserve">
    <value>Tax rate depends on the tax rate of the products in this order</value>
  </data>
  <data name="TaxRate" xml:space="preserve">
    <value>Tax rate</value>
  </data>
  <data name="Total" xml:space="preserve">
    <value>Total</value>
  </data>
  <data name="TransactionID" xml:space="preserve">
    <value>Transaction ID</value>
  </data>
  <data name="VatNumber" xml:space="preserve">
    <value>Vat number</value>
  </data>
  <data name="ZipCode" xml:space="preserve">
    <value>Zip code</value>
  </data>
  <data name="NoBillingInfo" xml:space="preserve">
    <value>No billing information</value>
  </data>
  <data name="NoShippingInfo" xml:space="preserve">
    <value>No shipping information</value>
  </data>
  <data name="PageEditTitle" xml:space="preserve">
    <value>Edit order</value>
  </data>
  <data name="Credit" xml:space="preserve">
    <value>Credit</value>
  </data>
  <data name="InvoiceNumber" xml:space="preserve">
    <value>Invoice number</value>
  </data>
  <data name="RefInvoiceNumber" xml:space="preserve">
    <value>Reference invoice number</value>
  </data>
  <data name="Concept" xml:space="preserve">
    <value>Concept</value>
  </data>
  <data name="Country" xml:space="preserve">
    <value>Country</value>
  </data>
  <data name="AddressValidation" xml:space="preserve">
    <value>Address is required.</value>
  </data>
  <data name="CancelledVal" xml:space="preserve">
    <value>Cancelled</value>
  </data>
  <data name="CityValidation" xml:space="preserve">
    <value>City is required.</value>
  </data>
  <data name="CompletedVal" xml:space="preserve">
    <value>Completed</value>
  </data>
  <data name="ConceptVal" xml:space="preserve">
    <value>Concept</value>
  </data>
  <data name="CountryValidation" xml:space="preserve">
    <value>Country is required.</value>
  </data>
  <data name="CreditVal" xml:space="preserve">
    <value>Credit</value>
  </data>
  <data name="DigitsValidation" xml:space="preserve">
    <value>Please enter only digits and max </value>
  </data>
  <data name="DigitsValidationEnd" xml:space="preserve">
    <value> digits after decimal and 14 before.</value>
  </data>
  <data name="FailedVal" xml:space="preserve">
    <value>Failed</value>
  </data>
  <data name="FirstNameValidation" xml:space="preserve">
    <value>First name is required.</value>
  </data>
  <data name="LastNameValidation" xml:space="preserve">
    <value>Last name is required.</value>
  </data>
  <data name="NameValidation" xml:space="preserve">
    <value>Name is required.</value>
  </data>
  <data name="OnHoldVal" xml:space="preserve">
    <value>On hold</value>
  </data>
  <data name="PendingVal" xml:space="preserve">
    <value>Pending payment</value>
  </data>
  <data name="PhoneNumberValidation" xml:space="preserve">
    <value>This is not a valid phone number.</value>
  </data>
  <data name="PriceValidation" xml:space="preserve">
    <value>Price is required.</value>
  </data>
  <data name="ProcessingVal" xml:space="preserve">
    <value>Processing</value>
  </data>
  <data name="QuantityValidation" xml:space="preserve">
    <value>Quantity is required.</value>
  </data>
  <data name="SelectProduct" xml:space="preserve">
    <value>Select a product</value>
  </data>
  <data name="TaxRateValidation" xml:space="preserve">
    <value>Tax rate is required.</value>
  </data>
  <data name="Unauthorized" xml:space="preserve">
    <value>You are unauthorized to do this. You will be redirected to the login screen.</value>
  </data>
  <data name="ZipCodeValidation" xml:space="preserve">
    <value>Zip code is required.</value>
  </data>
  <data name="DigitsVal" xml:space="preserve">
    <value>Please enter only digits.</value>
  </data>
  <data name="MaxLength100" xml:space="preserve">
    <value>Please enter no more than 100 characters.</value>
  </data>
  <data name="MaxLength255" xml:space="preserve">
    <value>Please enter no more than 255 characters.</value>
  </data>
  <data name="MaxLength32" xml:space="preserve">
    <value>Please enter no more than 32 characters.</value>
  </data>
  <data name="EmailValidation" xml:space="preserve">
    <value>Please enter a valid email address.</value>
  </data>
</root>