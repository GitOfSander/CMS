#pragma checksum "/Users/sanderpals/Desktop/Spine/src/cms/Views/Pdf/Invoice.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "71490fbce4a3d8db4e4655d6402b3ab0aa3abd11"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Pdf_Invoice), @"mvc.1.0.view", @"/Views/Pdf/Invoice.cshtml")]
[assembly:global::Microsoft.AspNetCore.Mvc.Razor.Compilation.RazorViewAttribute(@"/Views/Pdf/Invoice.cshtml", typeof(AspNetCore.Views_Pdf_Invoice))]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#line 1 "/Users/sanderpals/Desktop/Spine/src/cms/Views/_ViewImports.cshtml"
using Site.Data;

#line default
#line hidden
#line 2 "/Users/sanderpals/Desktop/Spine/src/cms/Views/_ViewImports.cshtml"
using Site.Models;

#line default
#line hidden
#line 3 "/Users/sanderpals/Desktop/Spine/src/cms/Views/_ViewImports.cshtml"
using Site.Models.Account.ViewModels;

#line default
#line hidden
#line 4 "/Users/sanderpals/Desktop/Spine/src/cms/Views/_ViewImports.cshtml"
using Site.Models.Manage.ViewModels;

#line default
#line hidden
#line 5 "/Users/sanderpals/Desktop/Spine/src/cms/Views/_ViewImports.cshtml"
using Site.Models.Company;

#line default
#line hidden
#line 6 "/Users/sanderpals/Desktop/Spine/src/cms/Views/_ViewImports.cshtml"
using Site.Models.Page.ViewModels;

#line default
#line hidden
#line 7 "/Users/sanderpals/Desktop/Spine/src/cms/Views/_ViewImports.cshtml"
using Site.Models.ViewModels;

#line default
#line hidden
#line 8 "/Users/sanderpals/Desktop/Spine/src/cms/Views/_ViewImports.cshtml"
using Microsoft.AspNetCore.Identity;

#line default
#line hidden
#line 9 "/Users/sanderpals/Desktop/Spine/src/cms/Views/_ViewImports.cshtml"
using Microsoft.AspNetCore.Http;

#line default
#line hidden
#line 10 "/Users/sanderpals/Desktop/Spine/src/cms/Views/_ViewImports.cshtml"
using System.Globalization;

#line default
#line hidden
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"71490fbce4a3d8db4e4655d6402b3ab0aa3abd11", @"/Views/Pdf/Invoice.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"98e3d9b70f762eac4bd771722fad158d8becd5d7", @"/Views/_ViewImports.cshtml")]
    public class Views_Pdf_Invoice : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<Site.Models.ViewModels.PdfViewModel>
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("style", new global::Microsoft.AspNetCore.Html.HtmlString("border: none; margin: 0; padding: 0;"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        #pragma warning restore 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.HeadTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_HeadTagHelper;
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.BodyTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_BodyTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
#line 2 "/Users/sanderpals/Desktop/Spine/src/cms/Views/Pdf/Invoice.cshtml"
  
    Layout = null;

#line default
#line hidden
            BeginContext(71, 10, true);
            WriteLiteral("\r\n<html>\r\n");
            EndContext();
            BeginContext(81, 3278, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("head", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "71490fbce4a3d8db4e4655d6402b3ab0aa3abd114931", async() => {
                BeginContext(87, 41, true);
                WriteLiteral("\r\n    <meta charset=\"utf-8\">\r\n    <title>");
                EndContext();
                BeginContext(129, 13, false);
#line 9 "/Users/sanderpals/Desktop/Spine/src/cms/Views/Pdf/Invoice.cshtml"
      Write(Model.Website);

#line default
#line hidden
                EndContext();
                BeginContext(142, 51, true);
                WriteLiteral(" factuur</title>\r\n    <meta name=\"application-name\"");
                EndContext();
                BeginWriteAttribute("content", " content=\"", 193, "\"", 225, 2);
#line 10 "/Users/sanderpals/Desktop/Spine/src/cms/Views/Pdf/Invoice.cshtml"
WriteAttributeValue("", 203, Model.Website, 203, 14, false);

#line default
#line hidden
                WriteAttributeValue(" ", 217, "factuur", 218, 8, true);
                EndWriteAttribute();
                BeginContext(226, 26, true);
                WriteLiteral(">\r\n    <meta name=\"author\"");
                EndContext();
                BeginWriteAttribute("content", " content=\"", 252, "\"", 276, 1);
#line 11 "/Users/sanderpals/Desktop/Spine/src/cms/Views/Pdf/Invoice.cshtml"
WriteAttributeValue("", 262, Model.Website, 262, 14, false);

#line default
#line hidden
                EndWriteAttribute();
                BeginContext(277, 2915, true);
                WriteLiteral(@">
    <style>
        html {
            font: 16px/1 'Open Sans', sans-serif;
            overflow: auto;
        }

        body {
            background: #ffffff !important;
            margin: 0;
            padding: 0;
            border: 0;
        }

        table.balance {
            float: right;
            font-size: 16px;
            line-height: 24px;
            margin: 0 26mm 0 0;
            width: 35%;
            border-collapse: collapse;
            border-style: hidden;
        }

            table.balance th,
            table.balance td {
                border: 9px solid #ffffff;
                border-top: 7px solid #ffffff !important;
                border-bottom: 7px solid #ffffff !important;
            }

            table.balance th {
                text-align: right;
            }

            table.balance:after {
                clear: both;
                content: """";
                display: table;
            }

        table.inv");
                WriteLiteral(@"entory {
            clear: left;
            font-size: 16px;
            line-height: 24px;
            width: 210.8mm;
            margin: 0 26mm 50px 26mm !important;
            padding: 0;
            border-collapse: collapse;
            border-style: hidden;
        }

            table.inventory thead {
                width: 100%;
            }

            table.inventory td {
                border: 13px solid #ffffff;
                border-top: 7px solid #ffffff !important;
                border-bottom: 7px solid #ffffff !important;
            }


                table.inventory td:nth-child(1) {
                    width: 35%;
                }

                table.inventory td:nth-child(2) {
                    text-align: right;
                    width: 15%;
                }

                table.inventory td:nth-child(3) {
                    text-align: right;
                    width: 15%;
                }

                table.inventory td:n");
                WriteLiteral(@"th-child(4) {
                    text-align: right;
                    width: 16%;
                }

                table.inventory td:nth-child(5) {
                    text-align: right;
                    width: 19%;
                }

        /* table balance */

        table.balance th, table.balance td {
            width: 50%;
        }

        table.balance td {
            text-align: right;
        }

        .notes {
            clear: left;
            width: 100%;
            padding: 70px 0 0 26mm !important
        }

            .notes h3 {
                margin-top: 0;
                margin-bottom: 0;
            }

            .notes p {
                font-size: 16px;
                line-height: 27px;
                white-space: pre-line;
            }
    </style>

    <style>
        ");
                EndContext();
                BeginContext(3193, 159, true);
                WriteLiteral("@media print {\r\n            background: #ffffff !important;\r\n            margin: 0;\r\n            padding: 0;\r\n            border: 0;\r\n        }\r\n    </style>\r\n");
                EndContext();
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_HeadTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.HeadTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_HeadTagHelper);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(3359, 2, true);
            WriteLiteral("\r\n");
            EndContext();
            BeginContext(3361, 3689, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("body", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "71490fbce4a3d8db4e4655d6402b3ab0aa3abd1110671", async() => {
                BeginContext(3412, 50, true);
                WriteLiteral("\r\n    <table class=\"inventory\">\r\n        <tbody>\r\n");
                EndContext();
#line 138 "/Users/sanderpals/Desktop/Spine/src/cms/Views/Pdf/Invoice.cshtml"
             if (Model.OrderLines != null)
            {
                

#line default
#line hidden
#line 140 "/Users/sanderpals/Desktop/Spine/src/cms/Views/Pdf/Invoice.cshtml"
                 foreach (var orderLine in @Model.OrderLines)
                {

#line default
#line hidden
                BeginContext(3603, 54, true);
                WriteLiteral("                    <tr>\r\n                        <td>");
                EndContext();
                BeginContext(3658, 14, false);
#line 143 "/Users/sanderpals/Desktop/Spine/src/cms/Views/Pdf/Invoice.cshtml"
                       Write(orderLine.Name);

#line default
#line hidden
                EndContext();
                BeginContext(3672, 35, true);
                WriteLiteral("</td>\r\n                        <td>");
                EndContext();
                BeginContext(3709, 37, false);
#line 144 "/Users/sanderpals/Desktop/Spine/src/cms/Views/Pdf/Invoice.cshtml"
                        Write( Model.Status == "credit" ? "-" : "" );

#line default
#line hidden
                EndContext();
                BeginContext(3747, 1, true);
                WriteLiteral(" ");
                EndContext();
                BeginContext(3749, 148, false);
#line 144 "/Users/sanderpals/Desktop/Spine/src/cms/Views/Pdf/Invoice.cshtml"
                                                                Write(Model.PriceFormat.Replace("price", Math.Round(orderLine.Price, Model.DigitsAfterDecimal).ToString(CultureInfo.GetCultureInfo("nl-NL").NumberFormat)));

#line default
#line hidden
                EndContext();
                BeginContext(3897, 35, true);
                WriteLiteral("</td>\r\n                        <td>");
                EndContext();
                BeginContext(3933, 83, false);
#line 145 "/Users/sanderpals/Desktop/Spine/src/cms/Views/Pdf/Invoice.cshtml"
                       Write(orderLine.TaxRate.ToString("G29", CultureInfo.GetCultureInfo("nl-NL").NumberFormat));

#line default
#line hidden
                EndContext();
                BeginContext(4016, 36, true);
                WriteLiteral("%</td>\r\n                        <td>");
                EndContext();
                BeginContext(4053, 18, false);
#line 146 "/Users/sanderpals/Desktop/Spine/src/cms/Views/Pdf/Invoice.cshtml"
                       Write(orderLine.Quantity);

#line default
#line hidden
                EndContext();
                BeginContext(4071, 35, true);
                WriteLiteral("</td>\r\n                        <td>");
                EndContext();
                BeginContext(4108, 37, false);
#line 147 "/Users/sanderpals/Desktop/Spine/src/cms/Views/Pdf/Invoice.cshtml"
                        Write( Model.Status == "credit" ? "-" : "" );

#line default
#line hidden
                EndContext();
                BeginContext(4146, 1, true);
                WriteLiteral(" ");
                EndContext();
                BeginContext(4148, 171, false);
#line 147 "/Users/sanderpals/Desktop/Spine/src/cms/Views/Pdf/Invoice.cshtml"
                                                                Write(Model.PriceFormat.Replace("price", (Math.Round(orderLine.Price, Model.DigitsAfterDecimal) * orderLine.Quantity).ToString(CultureInfo.GetCultureInfo("nl-NL").NumberFormat)));

#line default
#line hidden
                EndContext();
                BeginContext(4319, 34, true);
                WriteLiteral("</td>\r\n                    </tr>\r\n");
                EndContext();
#line 149 "/Users/sanderpals/Desktop/Spine/src/cms/Views/Pdf/Invoice.cshtml"
                }

#line default
#line hidden
#line 149 "/Users/sanderpals/Desktop/Spine/src/cms/Views/Pdf/Invoice.cshtml"
                 
            }

#line default
#line hidden
#line 151 "/Users/sanderpals/Desktop/Spine/src/cms/Views/Pdf/Invoice.cshtml"
             if (Model.OrderFees != null)
            {
                

#line default
#line hidden
#line 153 "/Users/sanderpals/Desktop/Spine/src/cms/Views/Pdf/Invoice.cshtml"
                 foreach (var orderFee in @Model.OrderFees)
                {

#line default
#line hidden
                BeginContext(4525, 54, true);
                WriteLiteral("                    <tr>\r\n                        <td>");
                EndContext();
                BeginContext(4580, 13, false);
#line 156 "/Users/sanderpals/Desktop/Spine/src/cms/Views/Pdf/Invoice.cshtml"
                       Write(orderFee.Name);

#line default
#line hidden
                EndContext();
                BeginContext(4593, 35, true);
                WriteLiteral("</td>\r\n                        <td>");
                EndContext();
                BeginContext(4630, 37, false);
#line 157 "/Users/sanderpals/Desktop/Spine/src/cms/Views/Pdf/Invoice.cshtml"
                        Write( Model.Status == "credit" ? "-" : "" );

#line default
#line hidden
                EndContext();
                BeginContext(4668, 1, true);
                WriteLiteral(" ");
                EndContext();
                BeginContext(4670, 147, false);
#line 157 "/Users/sanderpals/Desktop/Spine/src/cms/Views/Pdf/Invoice.cshtml"
                                                                Write(Model.PriceFormat.Replace("price", Math.Round(orderFee.Price, Model.DigitsAfterDecimal).ToString(CultureInfo.GetCultureInfo("nl-NL").NumberFormat)));

#line default
#line hidden
                EndContext();
                BeginContext(4817, 35, true);
                WriteLiteral("</td>\r\n                        <td>");
                EndContext();
                BeginContext(4853, 83, false);
#line 158 "/Users/sanderpals/Desktop/Spine/src/cms/Views/Pdf/Invoice.cshtml"
                       Write(orderFee.TaxRate?.ToString("G29", CultureInfo.GetCultureInfo("nl-NL").NumberFormat));

#line default
#line hidden
                EndContext();
                BeginContext(4936, 72, true);
                WriteLiteral("%</td>\r\n                        <td>1</td>\r\n                        <td>");
                EndContext();
                BeginContext(5010, 37, false);
#line 160 "/Users/sanderpals/Desktop/Spine/src/cms/Views/Pdf/Invoice.cshtml"
                        Write( Model.Status == "credit" ? "-" : "" );

#line default
#line hidden
                EndContext();
                BeginContext(5048, 1, true);
                WriteLiteral(" ");
                EndContext();
                BeginContext(5050, 147, false);
#line 160 "/Users/sanderpals/Desktop/Spine/src/cms/Views/Pdf/Invoice.cshtml"
                                                                Write(Model.PriceFormat.Replace("price", Math.Round(orderFee.Price, Model.DigitsAfterDecimal).ToString(CultureInfo.GetCultureInfo("nl-NL").NumberFormat)));

#line default
#line hidden
                EndContext();
                BeginContext(5197, 35, true);
                WriteLiteral("</td>\r\n\r\n                   </tr>\r\n");
                EndContext();
#line 163 "/Users/sanderpals/Desktop/Spine/src/cms/Views/Pdf/Invoice.cshtml"
                }

#line default
#line hidden
#line 163 "/Users/sanderpals/Desktop/Spine/src/cms/Views/Pdf/Invoice.cshtml"
                 
            }

#line default
#line hidden
                BeginContext(5266, 121, true);
                WriteLiteral("        </tbody>\r\n    </table>\r\n\r\n    <table class=\"balance\">\r\n        <!--<tr>\r\n        <th>Subtotaal</th>\r\n        <td>");
                EndContext();
                BeginContext(5388, 14, false);
#line 171 "/Users/sanderpals/Desktop/Spine/src/cms/Views/Pdf/Invoice.cshtml"
       Write(Model.Subtotal);

#line default
#line hidden
                EndContext();
                BeginContext(5402, 87, true);
                WriteLiteral("</td>\r\n    </tr>-->\r\n        <tr>\r\n            <th>Verzendkosten</th>\r\n            <td>");
                EndContext();
                BeginContext(5491, 37, false);
#line 175 "/Users/sanderpals/Desktop/Spine/src/cms/Views/Pdf/Invoice.cshtml"
            Write( Model.Status == "credit" ? "-" : "" );

#line default
#line hidden
                EndContext();
                BeginContext(5529, 1, true);
                WriteLiteral(" ");
                EndContext();
                BeginContext(5531, 152, false);
#line 175 "/Users/sanderpals/Desktop/Spine/src/cms/Views/Pdf/Invoice.cshtml"
                                                    Write(Model.PriceFormat.Replace("price", Math.Round(Model.ShippingCosts, Model.DigitsAfterDecimal).ToString(CultureInfo.GetCultureInfo("nl-NL").NumberFormat)));

#line default
#line hidden
                EndContext();
                BeginContext(5683, 183, true);
                WriteLiteral("</td>\r\n        </tr>\r\n        <tr>\r\n            <td colspan=\"2\">\r\n                <hr />\r\n            </td>\r\n        </tr>\r\n        <tr>\r\n            <th>Totaal</th>\r\n            <td>");
                EndContext();
                BeginContext(5868, 37, false);
#line 184 "/Users/sanderpals/Desktop/Spine/src/cms/Views/Pdf/Invoice.cshtml"
            Write( Model.Status == "credit" ? "-" : "" );

#line default
#line hidden
                EndContext();
                BeginContext(5906, 1, true);
                WriteLiteral(" ");
                EndContext();
                BeginContext(5908, 11, false);
#line 184 "/Users/sanderpals/Desktop/Spine/src/cms/Views/Pdf/Invoice.cshtml"
                                                    Write(Model.Total);

#line default
#line hidden
                EndContext();
                BeginContext(5919, 22, true);
                WriteLiteral("</td>\r\n        </tr>\r\n");
                EndContext();
#line 186 "/Users/sanderpals/Desktop/Spine/src/cms/Views/Pdf/Invoice.cshtml"
         if (Model.TaxClasses != null)
        {
            

#line default
#line hidden
#line 188 "/Users/sanderpals/Desktop/Spine/src/cms/Views/Pdf/Invoice.cshtml"
             foreach (var taxClass in @Model.TaxClasses)
            {
                

#line default
#line hidden
#line 190 "/Users/sanderpals/Desktop/Spine/src/cms/Views/Pdf/Invoice.cshtml"
                 if (decimal.Parse(taxClass.Value.ToString()) > 0)
                {

#line default
#line hidden
                BeginContext(6152, 67, true);
                WriteLiteral("                    <tr>\r\n                        <td>Waarvan BTW (");
                EndContext();
                BeginContext(6220, 93, false);
#line 193 "/Users/sanderpals/Desktop/Spine/src/cms/Views/Pdf/Invoice.cshtml"
                                    Write(decimal.Parse(taxClass.Key).ToString("G29", CultureInfo.GetCultureInfo("nl-NL").NumberFormat));

#line default
#line hidden
                EndContext();
                BeginContext(6313, 40, true);
                WriteLiteral("%)</td>\r\n                        <td><i>");
                EndContext();
                BeginContext(6355, 37, false);
#line 194 "/Users/sanderpals/Desktop/Spine/src/cms/Views/Pdf/Invoice.cshtml"
                           Write( Model.Status == "credit" ? "-" : "" );

#line default
#line hidden
                EndContext();
                BeginContext(6393, 1, true);
                WriteLiteral(" ");
                EndContext();
                BeginContext(6395, 173, false);
#line 194 "/Users/sanderpals/Desktop/Spine/src/cms/Views/Pdf/Invoice.cshtml"
                                                                   Write(Model.PriceFormat.Replace("price", Math.Round(decimal.Parse(taxClass.Value.ToString()), Model.DigitsAfterDecimal).ToString(CultureInfo.GetCultureInfo("nl-NL").NumberFormat)));

#line default
#line hidden
                EndContext();
                BeginContext(6568, 38, true);
                WriteLiteral("</i></td>\r\n                    </tr>\r\n");
                EndContext();
#line 196 "/Users/sanderpals/Desktop/Spine/src/cms/Views/Pdf/Invoice.cshtml"
                }

#line default
#line hidden
#line 196 "/Users/sanderpals/Desktop/Spine/src/cms/Views/Pdf/Invoice.cshtml"
                 
            }

#line default
#line hidden
#line 197 "/Users/sanderpals/Desktop/Spine/src/cms/Views/Pdf/Invoice.cshtml"
             
        }

#line default
#line hidden
                BeginContext(6651, 24, true);
                WriteLiteral("    </table>\r\n\r\n    <!--");
                EndContext();
#line 201 "/Users/sanderpals/Desktop/Spine/src/cms/Views/Pdf/Invoice.cshtml"
         if (!string.IsNullOrWhiteSpace(Model.Note))
    {

#line default
#line hidden
                BeginContext(6728, 159, true);
                WriteLiteral("        <table class=\"notes\">\r\n            <tr>\r\n                <td>\r\n                    <h3>Notities</h3>\r\n                    <p>\r\n                        ");
                EndContext();
                BeginContext(6888, 57, false);
#line 208 "/Users/sanderpals/Desktop/Spine/src/cms/Views/Pdf/Invoice.cshtml"
                   Write(Html.Raw(Html.Encode(Model.Note).Replace("\n", "<br />")));

#line default
#line hidden
                EndContext();
                BeginContext(6945, 88, true);
                WriteLiteral("\r\n                    </p>\r\n                </td>\r\n            </tr>\r\n        </table>\r\n");
                EndContext();
#line 213 "/Users/sanderpals/Desktop/Spine/src/cms/Views/Pdf/Invoice.cshtml"
    }

#line default
#line hidden
                BeginContext(7038, 5, true);
                WriteLiteral("-->\r\n");
                EndContext();
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_BodyTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.BodyTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_BodyTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(7050, 9, true);
            WriteLiteral("\r\n</html>");
            EndContext();
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<Site.Models.ViewModels.PdfViewModel> Html { get; private set; }
    }
}
#pragma warning restore 1591
